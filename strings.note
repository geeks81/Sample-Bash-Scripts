# STRING MANIPULATIONS
### concatination e.g.
a="hello"
b="world"
c=$ab
echo $c

## how long is a string?
echo ${#a}
 
## getting a substring (starting with index 0)
echo d=${c:3}

## specific number of chars after index 0 to 3
e=${c:3:4}

## using a negative number will start to count at the end of the string
echo ${c: -4}

echo ${c: -4:3}

## REPLACING STRINGS

fruit="apple banana banana cherry"
echo ${fruit/banana/durian}        this will replace the first instance of banana with durian
echo ${fruit/banana/durian}	  replace all instance of banana with durian
echo ${fruit#banana/durian}   will replace banana only if it's at the beginning of a string
echo ${fruit%banana/durian}   will replace banana only if it;s at the end of a string


## COLORING STRINGS

## ANSI Colored text  format must use Echo with escaping sequence (-e)

color    Fg    Bg
Black 	30	40
Red	31	41
Green	32	42
Yellow	33	43
Blue	34	44
Magenta	35	45
Cyan	36	46
White	37	47

### Example

echo -e '\033[34;42mColor Text\033[0m'

\033[ = indicate start of color format
34; = set foreground color 34
42 =  set background color 42
\033[0m = indicate end of color format

## ANSI Styled text

style		value
No style	0
Bold		1
Low intensity	2
Underline	4
Blinking	5
Reverse		7
Invisible		8

echo -e "\033[5;31;40mError: \033[0m\033[31;40mMessage to display.\033[0m" 

## Only the "Error" string will blink (notice we used style 5).


# Simle combinations trick to reuse color codes in a script

flashred="\033[5;31;40m"
red="\033[31;40m"
none="\033[0m" 

echo -e $flashred"Error: "$none$red"Message to display."$none

tput Styled text

color	setaf	setab
Black	0		0
Red	1		1
Green	2 		2
Yellow	3		3
Blue 	4		4
Magenta	5		5
Cyan	6		6
White	7		7


style			command
Foreground		tput setaf [0-7]
Background		tput setab [0-7]
No Style		tput sgv0
Bold			tput bold
Low Intensity		tput dim
Underline		tput smul
Blinking		tput blink
Reverse			tput rev


## tput is a command so cmd substitution is required while using variables

flashred=$(tput setab 0; tput setaf 1; tput blink)
red=$(tput setab 0; tput setaf 1)
none=$(tput sr0)

echo -e $flashred"Error: "$none$red"Message to display."$none

# man terminfo for more details



## printf  and time

today=$(date + "%d-%m-%Y")
time=$(date +"%H:%M:%S")
printf -v d "Current User:\t%s\nDate:\t\t%s @ %s\n" $USER $today $time
echo "$d"



